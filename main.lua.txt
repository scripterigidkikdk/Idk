local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "my 1 st scriptðŸ”«",
   Icon = 0, -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
   LoadingTitle = "Rayfield source hub",
   LoadingSubtitle = "by uni",
   ShowText = "Rayfield", -- for mobile users to unhide rayfield, change if you'd like
   Theme = "Default", -- Check https://docs.sirius.menu/rayfield/configuration/themes

   ToggleUIKeybind = "K", -- The keybind to toggle the UI visibility (string like "K" or Enum.KeyCode)

   DisableRayfieldPrompts = false,
   DisableBuildWarnings = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface

   ConfigurationSaving = {
      Enabled = false,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "deivydoestutorial33"
   },

   Discord = {
      Enabled = false, -- Prompt the user to join your Discord server if their executor supports it
      Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },

   KeySystem = false, -- Set this to true to use our key system
   KeySettings = {
      Title = "untitled script",
      Subtitle = "Key System",
      Note = "No method of obtaining the key is provided", -- Use this to tell the user how to get a key
      FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"Hello"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")}
})

    local Tab = Window:CreateTab("main",nil) -- Title, Image
    local MainSection = Tab:CreateSection("Section Example")

local Button = MainTab:CreateButton({
   Name = "inf jump",
   Callback = function()
    -- LocalScript (put in StarterPlayer -> StarterPlayerScripts)
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")

local player = Players.LocalPlayer
local infiniteJump = false
local humanoid

local function onCharacterAdded(char)
    humanoid = char:WaitForChild("Humanoid")
end

player.CharacterAdded:Connect(onCharacterAdded)
if player.Character then
    onCharacterAdded(player.Character)
end

-- When the player requests a jump, force the Humanoid into Jumping if infiniteJump is on
UserInputService.JumpRequest:Connect(function()
    if infiniteJump and humanoid and humanoid.Health > 0 then
        -- ChangeState to Jumping works even if the player is mid-air
        humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
    end
end)

-- Simple test toggle: press G to toggle infinite jump locally
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    if input.KeyCode == Enum.KeyCode.G then
        infiniteJump = not infiniteJump
        -- optional: show a message to the player or GUI update
        print("Infinite jump:", infiniteJump)
    end
end)
   end,
})